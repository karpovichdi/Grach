trigger:
- master

variables:
- group: android-build-variables

pool:
  vmImage: 'macos-latest'

steps:  

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import os
            
      from xml.dom import minidom
      xmldoc = minidom.parse('./Grach/Grach/Grach/Pages/LoginPage.xaml')
      containers = xmldoc.getElementsByTagName("ContentPage")
      container = containers[0]
      print(container.attributes["BackgroundColor"].value)
      container.attributes["BackgroundColor"].value = "Red"
      print(container.attributes["BackgroundColor"].value)
      print(xmldoc.toxml())
      
      with open('./Grach/Grach/Grach/Pages/LoginPage.xaml', "a+") as f:
        xmldoc.writexml(f)

      dir = [f for f in os.listdir('./Grach/Grach/Grach/Pages')]
      for f in dir:
        print(f)
      
  
- task: XamarinAndroid@1
  inputs:
    projectFile: '**/*droid*.csproj'
    outputDirectory: '$(outputDirectory)'
    configuration: '$(buildConfiguration)'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksign: true
    apksignerKeystoreFile: 'Grach.keystore'
    apksignerKeystorePassword: $(keystore.password)
    apksignerKeystoreAlias: $(key.alias)
    apksignerKeyPassword: $(key.password)
    apksignerArguments: --out $(outputDirectory)/app.release.apk
    zipalign: true

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'GrachVSAC'
    appSlug: '$(appSlug2)'
    appFile: '$(outputDirectory)/app.release.apk'
    releaseNotesOption: 'input'
    releaseNotesInput: 'New version'
    destinationType: 'groups'
    distributionGroupId: '$(distributionGroupId2)'

- task: XamarinAndroid@1
  inputs:
    projectFile: '**/*droid*.csproj'
    outputDirectory: '$(outputDirectory)'
    configuration: '$(multiBuildConfiguration1)'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksign: true
    apksignerKeystoreFile: 'Grach.keystore'
    apksignerKeystorePassword: $(keystore.password)
    apksignerKeystoreAlias: $(key.alias)
    apksignerKeyPassword: $(key.password)
    apksignerArguments: --out $(outputDirectory)/app.release.apk
    zipalign: true

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'GrachVSAC'
    appSlug: '$(appSlug)'
    appFile: '$(outputDirectory)/app.release.apk'
    releaseNotesOption: 'input'
    releaseNotesInput: 'New version'
    destinationType: 'groups'
    distributionGroupId: '$(distributionGroupId)'